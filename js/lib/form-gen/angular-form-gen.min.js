/*
 fa-angular-form-gen v0.1.1
   (c) 2015 Pranav Sathy https://github.com/PranavSathy/angular-form-gen
   License: MIT
*/
(function(h){var f=h.module("fg",["dq"]);f.constant("FgField",function(a,e){this.name=this.type=a;e&&h.extend(this,e);this.displayName=this.displayName||this.type.charAt(0).toUpperCase()+this.type.substring(1)});f.config(["$provide",function(a){a.provider("fgConfig",function(){function a(a){for(var d=b.length;d--&&b[d].type!==a;);return d}var c={enableDebugInfo:!1,validation:{messages:{},patterns:{}},fields:{templates:[],categories:{},renderInfo:{}}},b=c.fields.templates;return{debug:function(a){c.enableDebugInfo=
a},fields:{add:function(d,c,e,l){if(!(d&&d.type&&c&&c.length))throw Error("Need a valid objectTemplate and at least one category");var g=a(d.type);-1!==g?b[g]=d:b.push(d);this.category(d.type,c);this.renderInfo(d.type,e,l)},remove:function(d){var c=a(d);-1!==c&&b.splice(c,1);this.category(d);this.renderInfo(d)},get:function(a){for(var d=b.length;d--;){var c=b[d];if(c.type===a)return c}},renderInfo:function(a,b,e){c.fields.renderInfo[a]={templateUrl:b,propertiesTemplateUrl:e}},category:function(a,
b){h.isArray(b)||(b=[b]);h.forEach(c.fields.categories,function(d){delete d[a]});h.forEach(b,function(d){void 0===c.fields.categories[d]&&(c.fields.categories[d]={});c.fields.categories[d][a]=!0})}},validation:{message:function(a,b){var d=c.validation.messages;if(h.isString(a)){if(!b)throw Error("No message specified for "+a);d[a]=b}else h.extend(d,a)},pattern:function(a,b){h.isString(a)?c.validation.patterns[a]=b:h.extend(c.validation.patterns,a)}},$get:function(){return c}}})}]);f.config(["fgConfigProvider",
"FgField",function(a,e){a.validation.message({required:"Dies ist ein Pflichtfeld!",minlength:'The value does not match the minimum length{{ field.schema && (" of " + field.schema.validation.minlength + " characters" || "")}}.',maxlength:'The value exceeds the maximum length{{ field.schema && (" of " + field.schema.validation.maxlength + " characters" || "")}}.',pattern:'The value "{{ field.state.$viewValue }}" does not match the required format.',email:'The value "{{ field.state.$viewValue }}" is not a valid email address.',
unique:'The value "{{ field.state.$viewValue }}" is already in use.',number:'The value "{{ field.state.$viewValue }}" is not a number.',min:'The value {{ field.schema && ("should be at least " + field.schema.validation.min) || field.state.$viewValue + " is too low" }}',max:'The value {{ field.schema && ("should be less than " + field.schema.validation.max) || field.state.$viewValue + " is too high" }}',minoptions:"At least {{ field.schema.validation.minoptions }} option(s) should be selected.",maxoptions:"No more than {{ field.schema.validation.maxoptions }} option(s) should be selected."});
var c={"Text input fields":[new e("beschriftung",{displayName:"Beschriftung"}),new e("date",{displayName:"Datum"}),new e("text",{displayName:"Textfeld"}),new e("email",{displayName:"E-Mail"}),new e("upload",{displayName:"Upload"}),new e("number",{displayName:"Zahl",validation:{maxlength:15}}),new e("textarea",{displayName:"Textbereich"})],"Checkbox fields":[new e("checkbox",{nolabel:!0}),new e("checkboxlist",{displayName:"Check Liste",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},
{value:"3",text:"Option 3"}],value:{1:!0,2:!0}})],"Select input fields":[new e("radiobuttonlist",{displayName:"Radio Liste",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:"1"}),new e("selectlist",{displayName:"Auswahl Liste",options:[{value:"",text:"-- Bitte W\u00e4hlen --"},{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:""})]};h.forEach(c,function(b,d){h.forEach(b,function(b){a.fields.add(b,d)})});a.validation.pattern({None:void 0,
Url:"/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/",Domain:"/^([a-z][a-z0-9\\-]+(\\.|\\-*\\.))+[a-z]{2,6}$/","IPv4 Address":"/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/","Email Address":"/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/",Integer:"/^-{0,1}\\d+$/","Positive Integers":"/^\\d+$/","Negative Integers":"/^-\\d+$/",Number:"/^-{0,1}\\d*\\.{0,1}\\d+$/","Positive Number":"/^\\d*\\.{0,1}\\d+$/","Negative Number":"/^-\\d*\\.{0,1}\\d+$/",
"Year (1920-2099)":"/^(19|20)[\\d]{2,2}$/",Password:"/(?=.*\\d)(?=.*[!@#$%^&*\\-=()|?.\"';:]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/"})}]);h.module("fg").run(["$templateCache",function(a){a.put("angular-form-gen/edit/edit.ng.html",'<div class="fg-edit row form-group" ng-form="$fg"><div class="col-sm-8"><div fg-form="" fg-edit-canvas="" fg-no-render="true"></div></div><div class="col-sm-4" ng-form="$palette" fg-null-form=""><div fg-form="" fg-edit-palette="" fg-no-render="true"></div></div></div>');
a.put("angular-form-gen/validation/summary.ng.html",'<ul class="fg-validation-summary help-block unstyled" ng-if="field.state.$invalid && field.state.$dirty"><li ng-repeat="(key, error) in field.state.$error" ng-if="error" fg-bind-expression="messages[key]"></li></ul>');a.put("angular-form-gen/common/jsonify/jsonify.ng.html",'<div class="jsonify"><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs" type="button" title="Copy the json data." ng-click="copy()"><span class="fa fa-clipboard"></span></button> <button class="btn btn-default btn-xs" type="button" title="Display hidden properties." ng-click="displayHidden = !displayHidden" ng-class="{ \'active\': displayHidden }"><span class="fa fa-eye"></span></button></div><pre><code>{{ jsonify | j$on:displayHidden }}</code></pre></div>');
a.put("angular-form-gen/common/tabs/tabs-pane.ng.html",'<div class="fg-tabs-pane" ng-show="tabs.active === pane"><div ng-if="tabs.active === pane || pane.renderAlways" ng-transclude=""></div></div>');a.put("angular-form-gen/common/tabs/tabs.ng.html",'<div class="fg-tabs tabbable"><ul class="nav nav-tabs"><li ng-repeat="tab in tabs.items" ng-class="{ active: tab === tabs.active, disabled: tab.disabled }"><a href="" ng-click="tabs.activate(tab)">{{ tab.title }}</a></li></ul><div class="tab-content" ng-transclude=""></div></div>');
a.put("angular-form-gen/edit/canvas/canvas.ng.html",'<div class="fg-edit-canvas" ng-class="{ \'fg-edit-canvas-dragging\': dragging }"><fieldset><div class="fg-edit-canvas-area" dq-drag-area="fg-edit-canvas" dq-drag-enter="canvasCtrl.dragEnter()" dq-drag-leave="canvasCtrl.dragLeave()" dq-drop="canvasCtrl.drop()"><div ng-if="!(schema.fields.length)"><div ng-if="!dragPlaceholder.visible" class="fg-edit-canvas-area-empty alert alert-info text-center"><p class="fg-edit-canvas-area-empty-x">X</p><p class="lead hidden-phone"><strong>Reinziehen</strong> oder auf <strong>+</strong> klicken!</p></div></div><div ng-repeat="field in schema.fields"><div ng-class="{ \'fg-drag-placeholder-visible\' : dragPlaceholder.visible && dragPlaceholder.index === $index }" class="fg-drag-placeholder"></div><div fg-edit-canvas-field=""></div></div><div ng-class="{ \'fg-drag-placeholder-visible\': dragPlaceholder.visible && dragPlaceholder.index == schema.fields.length }" class="fg-drag-placeholder"></div></div></fieldset></div>');
a.put("angular-form-gen/edit/palette/palette.ng.html",'<div class="fg-edit-palette"><fieldset><div fg-edit-palette-categories="" data-category="selectedCategory"></div><div ng-repeat="template in templates | filter:templateFilter" class="fg-field" dq-draggable="fg-edit-canvas" dq-drag-begin="{ source: \'palette\', field: template }"><div class="fg-field-overlay"><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs btn-primary" type="button" ng-click="schemaCtrl.addField(template)" title="Add this field."><span class="fa fa-plus"></span></button></div></div><div fg-field="template" fg-tab-index="-1" fg-no-validation-summary="true" fg-edit-mode="true"></div></div></fieldset></div>');
a.put("angular-form-gen/field-templates/default/checkbox.ng.html",'<div class="checkbox"><label title="{{ field.schema.tooltip }}"><input fg-field-input="" id="{{ field.$_id }}" type="checkbox" tabindex="{{ tabIndex }}" ng-model="form.data[field.schema.name]"> <span ng-if="field.schema.nolabel">{{ field.schema.displayName }}</span></label></div>');a.put("angular-form-gen/field-templates/default/checkboxlist.ng.html",'<div fg-checkboxlist="" fg-field-input="" ng-model="form.data[field.schema.name]" name="{{ field.schema.name }}"><div class="checkbox" ng-repeat="option in field.schema.options"><label title="{{ field.schema.tooltip }}"><input type="checkbox" tabindex="{{ tabIndex }}" value="{{ option.value }}" ng-model="form.data[field.schema.name][option.value]"> <span>{{option.text || option.value}}</span></label></div></div>');
a.put("angular-form-gen/field-templates/default/dropdownlist.ng.html",'<div fg-field-input="" fg-dropdown-input="field.schema.options" title="{{ field.schema.tooltip }}" id="{{ field.$_id }}" ng-model="form.data[field.schema.name]"  tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ></div>');a.put("angular-form-gen/field-templates/default/email.ng.html",'<input class="form-control" fg-field-input="" type="email" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]"  >');
a.put("angular-form-gen/field-templates/default/upload.ng.html",'<input readonly class="form-control" fg-field-input="" type="email" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]"  >');a.put("angular-form-gen/field-templates/default/not-in-cache.ng.html",'<div class="fg-field-not-in-cache alert alert-error"><p>No template registered in cache for field type "{{ field.type }}".</p></div>');
a.put("angular-form-gen/field-templates/default/number.ng.html",'<input class="form-control" fg-field-input="" fg-input-number="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}"  ng-model="form.data[field.schema.name]"  ng-minlength="{{ field.schema.validation.minlength }}">');a.put("angular-form-gen/field-templates/default/password.ng.html",'<input class="form-control" fg-field-input="" type="password" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" >');
a.put("angular-form-gen/field-templates/default/radiobuttonlist.ng.html",'<div class="radio" ng-repeat="option in field.schema.options"><label title="{{ field.schema.tooltip }}"><input fg-field-input="" type="radio" name="{{ field.schema.name }}[]" tabindex="{{ tabIndex }}" value="{{ option.value }}" ng-model="form.data[field.schema.name]" > <span>{{option.text || option.value}}</span></label></div>');a.put("angular-form-gen/field-templates/default/selectlist.ng.html",'<select class="form-control" fg-selectlist="" fg-field-input="" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" ng-model="form.data[field.schema.name]"  tabindex="{{ tabIndex }}"><option ng-repeat="option in field.schema.options" value="{{ option.value }}" ng-selected="form.data[field.schema.name] === option.value">{{ option.text || option.value }}</option></select>');
a.put("angular-form-gen/field-templates/default/text.ng.html",'<input class="form-control" fg-field-input="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" ng-model="form.data[field.schema.name]">');a.put("angular-form-gen/field-templates/default/time.ng.html",'<input class="form-control" fg-field-input="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" ng-model="form.data[field.schema.name]">');a.put("angular-form-gen/field-templates/default/date.ng.html",
'<input class="form-control" fg-field-input="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]">');a.put("angular-form-gen/field-templates/default/textarea.ng.html",'<textarea class="form-control" fg-field-input="" ng-model="form.data[field.schema.name]" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}"></textarea>');a.put("angular-form-gen/field-templates/default/beschriftung.ng.html",
'<textarea class="form-control" fg-field-input="" ng-model="form.data[field.schema.name]" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}"></textarea>');a.put("angular-form-gen/field-templates/properties/checkbox.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, tooltip: true }"></div><div fg-property-field="fieldValue"><div class="checkbox"><label title="Set the initial value of this field."><input type="checkbox" name="fieldValue" ng-model="field.value"> Initialwert</label></div></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true }"></div></div>');
a.put("angular-form-gen/field-templates/properties/checkboxlist.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, tooltip: true }"></div></div><div fg-tabs-pane="Optionen"><div fg-property-field-options="multiple"></div></div>');a.put("angular-form-gen/field-templates/properties/dropdownlist.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><div fg-field-input="" fg-dropdown-input="field.options" ng-model="field.value" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="{{ field.schema.validation.pattern }}"></div></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: false }"></div></div>');
a.put("angular-form-gen/field-templates/properties/email.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input type="email" class="form-control" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="{{ field.validation.pattern }}"></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: false }"></div></div>');
a.put("angular-form-gen/field-templates/properties/upload.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true, minlength: false, maxlength: false, pattern: false }"></div></div>');a.put("angular-form-gen/field-templates/properties/number.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input fg-input-number="" class="form-control" type="text" name="fieldValue" ng-model="field.value" min="{{ field.validation.min }}" max="{{ field.validation.max }}" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="{{ field.validation.pattern }}"></div></div><div fg-tabs-pane="Pr\u00fcfung"><div class="fg-property-field-validation"><div fg-property-field="min" fg-property-field-label="Minimum value"><input fg-input-number="" fg-field-redraw="" class="form-control" type="text" name="min" title="The minimum value that should be entered" ng-model="field.validation.min"></div><div ng-if="field.validation.min >= 0"><div fg-edit-validation-message="min"></div></div></div><div class="fg-property-field-validation"><div fg-property-field="max" fg-property-field-label="Maximum value"><input fg-input-number="" fg-field-redraw="" class="form-control" type="text" name="max" title="The maximum value that should be entered" ng-model="field.validation.max"></div><div ng-if="field.validation.max >= 0"><div fg-edit-validation-message="max"></div></div></div><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: false }"></div></div>');
a.put("angular-form-gen/field-templates/properties/password.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input fg-input-number="" class="form-control" type="password" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="{{ field.validation.pattern }}"></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: false }"></div></div>');
a.put("angular-form-gen/field-templates/properties/radiobuttonlist.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, tooltip: true }"></div></div><div fg-tabs-pane="Optionen"><div fg-property-field-options=""></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true }"></div></div>');a.put("angular-form-gen/field-templates/properties/selectlist.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, tooltip: true }"></div></div><div fg-tabs-pane="Optionen"><div fg-property-field-options=""></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true }"></div></div>');
a.put("angular-form-gen/field-templates/properties/textarea.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: false, tooltip: true }"></div><div fg-property-field-value=""><textarea name="fieldValue" class="form-control" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="{{ field.validation.pattern }}">\n    </textarea></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: false }"></div></div>');
a.put("angular-form-gen/field-templates/properties/beschriftung.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: false, placeholder: false, tooltip: false }"></div><div fg-property-field-value=""><textarea name="fieldValue" class="form-control" ng-model="field.value"></textarea></div></div></div>');a.put("angular-form-gen/form/field/field.ng.html",'<div class="fg-field-inner form-group" ng-class="{ \'fg-field-required\': fieldSchema.validation.required, \'has-error\': form.state[field.name].$invalid }"><label ng-if="!field.schema.nolabel" class="col-sm-3 control-label" for="{{ field.$_id }}">{{ fieldSchema.displayName }}</label><div class="col-sm-9" ng-class="{ \'col-sm-offset-3\': field.schema.nolabel }"><div ng-include="renderInfo.templateUrl"></div><div fg-validation-summary="" fg-validation-messages="fieldSchema.validation.messages" ng-if="!noValidationSummary"></div></div></div>');
a.put("angular-form-gen/form/form-fields/form-fields.ng.html",'<div class="fg-form-fields"><fieldset><div ng-repeat="field in form.schema.fields"><div fg-field="field"></div></div></fieldset></div>');a.put("angular-form-gen/edit/canvas/field/field.ng.html",'<div class="fg-field fg-field-{{ field.type }} fg-edit-canvas-field" ng-class="{ \'error\': field.$_invalid, \'dragging\': field.$_isDragging }" dq-draggable="fg-edit-canvas" dq-drag-disabled="dragEnabled === false" dq-drag-begin="canvasCtrl.dragBeginCanvasField($index, field)" dq-drag-end="canvasCtrl.dragEndCanvasField(field)"><div class="fg-field-overlay" ng-mouseenter="dragEnabled = true" ng-mouseleave="dragEnabled = false"><div class="fg-field-overlay-drag-top" dq-drag-enter="dragPlaceholder.index = $index"></div><div class="fg-field-overlay-drag-bottom" dq-drag-enter="dragPlaceholder.index = ($index + 1)"></div><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs" type="button" ng-disabled="field.$_displayProperties && field.$_invalid" ng-class="{ \'active\': field.$_displayProperties }" ng-click="toggleProperties(field)" title="Configure this field."><span class="fa fa-wrench"></span></button> <button class="btn btn-default btn-xs" type="button" ng-click="schemaCtrl.swapFields($index - 1, $index)" ng-disabled="$index === 0" title="Move up"><span class="fa fa-arrow-up"></span></button> <button class="btn btn-default btn-xs" type="button" ng-click="schemaCtrl.swapFields($index, $index + 1)" ng-disabled="$index === schema.fields.length - 1" title="Move down"><span class="fa fa-arrow-down"></span></button> <button class="btn btn-default btn-xs btn-danger" type="button" ng-click="schemaCtrl.removeField($index)" title="Remove"><span class="fa fa-trash"></span></button></div></div><div ng-form="" fg-null-form=""><div fg-field="field" fg-tab-index="-1" fg-edit-mode="true" fg-no-validation-summary="true"></div></div><div class="fg-field-properties-container" ng-class="{ visible: field.$_displayProperties }"><div fg-edit-canvas-field-properties="field" ng-if="expanded"></div></div></div>');
a.put("angular-form-gen/edit/palette/categories/categories.ng.html","");a.put("angular-form-gen/edit/canvas/field/properties/properties.ng.html",'<div class="fg-field-properties"><div novalidate="" ng-form="fieldPropertiesForm"><div fg-tabs="property.tabs"><div ng-include="renderInfo.propertiesTemplateUrl"></div></div></div></div>');a.put("angular-form-gen/edit/canvas/field/properties/options/options.ng.html",'<div ng-if="!field.options || field.options.length === 0" ng-click="optionsCtrl.addOption()" class="alert alert-info"><h2>No options defined</h2><p class="lead">Click here to add a new option definition to this field.</p></div><table ng-if="field.options.length > 0" class="table-field-options"><thead><tr><th></th><th>Value</th><th>Text</th><th><a href="" class="btn btn-default btn-xs" ng-click="optionsCtrl.addOption()" title="Add a new option to the list"><i class="fa fa-plus"></i></a></th><th class="table-field-options-padding"></th></tr></thead><tbody><tr ng-form="fieldOptionForm" ng-repeat="option in field.options" ng-class="{ \'error\': fieldOptionForm.$invalid }"><td ng-if="multiple === false"><input type="radio" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value" ng-click="optionsCtrl.toggleOption(option.value)"></td><td ng-if="multiple === true"><input type="checkbox" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value[option.value]"></td><td><input type="text" name="optionValue" ng-model="option.value" class="form-control" ng-required="field.type != \'selectlist\'"></td><td><input type="text" ng-model="option.text" class="form-control"></td><td><a href="" class="btn btn-default btn-xs" ng-click="optionsCtrl.removeOption($index)" title="Remove this option from the list"><i class="fa fa-trash"></i></a></td><td></td></tr></tbody></table>');
a.put("angular-form-gen/edit/canvas/field/properties/property-field/common.ng.html",'<div ng-if="fields.fieldname"><div fg-property-field="fieldName" fg-property-field-label="Name"><input type="text" class="form-control" name="fieldName" ng-model="field.name" ng-required="true" ng-pattern="/^[a-zA-Z]([\\w]+)?$/" fg-unique-field-name=""></div></div><div ng-if="fields.displayname"><div fg-property-field="displayName" fg-property-field-label="Anzeige Name *"><input type="text" class="form-control" name="displayName" ng-model="field.displayName" required></div></div><div ng-if="fields.placeholder"><div fg-property-field="fieldPlaceholder" fg-property-field-label="Platzhalter Text"><input type="text" class="form-control" name="fieldPlaceholder" ng-model="field.placeholder"></div></div><div ng-if="fields.tooltip"><div fg-property-field="fieldTooltip" fg-property-field-label="Hinweis Text"><input type="text" class="form-control" name="fieldTooltip" ng-model="field.tooltip"></div></div>');
a.put("angular-form-gen/edit/canvas/field/properties/property-field/field-value.ng.html",'<div ng-if="draw"><div fg-property-field="fieldValue" fg-property-field-label="Initialwert"><div ng-transclude=""></div></div></div>');a.put("angular-form-gen/edit/canvas/field/properties/property-field/property-field.ng.html",'<div class="form-group fg-property-field" ng-class="{ \'has-error\': fieldPropertiesForm[fieldName].$invalid }"><label class="col-sm-5 col-md-4 control-label">{{ fieldLabel }}</label><div class="col-sm-7 col-md-8"><div ng-transclude=""></div><div fg-validation-summary="{{ fieldName }}"></div></div></div>');
a.put("angular-form-gen/edit/canvas/field/properties/validation/validation-message.ng.html",'<div ng-form="valMsgForm"><div fg-property-field="message" fg-property-field-label="Message"><input type="text" name="message" title="{{ tooltip }}" placeholder="Optional message" ng-model="field.validation.messages[validationType]" class="form-control"></div></div>');a.put("angular-form-gen/edit/canvas/field/properties/validation/validation.ng.html",'<div ng-if="fields.minlength" class="fg-property-field-validation"><div fg-property-field="minlength" fg-property-field-label="Minimale L\u00e4nge"><input type="text" fg-field-redraw="" fg-input-number="" name="minlength" ng-model="field.validation.minlength" class="form-control"></div></div><div ng-if="fields.maxlength" class="fg-property-field-validation"><div fg-property-field="maxlength" fg-property-field-label="Maximale L\u00e4nge"><input type="text" fg-field-redraw="" fg-input-number="" name="maxlength" ng-model="field.validation.maxlength" class="form-control"></div></div><div ng-if="fields.pattern" class="fg-property-field-validation"><div fg-property-field="pattern" fg-property-field-label="Pattern"><div fg-dropdown-input="patternOptions" name="pattern" fg-parse-pattern="" fg-field-redraw="" ng-model="field.validation.pattern"></div></div></div><div ng-if="fields.required" class="fg-property-field-validation"><div fg-property-field="required"><div class="checkbox"><label><input type="checkbox" ng-model="field.validation.required">Pflichtfeld</label></div></div></div>');
a.put("angular-form-gen/field-templates/properties/date.ng.html",'<div fg-tabs-pane="Einstellungen">\n    <div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div></div>');a.put("angular-form-gen/field-templates/properties/text.ng.html",'<div fg-tabs-pane="Einstellungen"><div fg-property-field-common="{ fieldname: false, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input type="text" class="form-control" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="{{ field.validation.pattern }}"></div></div><div fg-tabs-pane="Pr\u00fcfung"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: false }"></div></div>')}]);
f.directive("fgBindExpression",["$interpolate",function(a){function e(a){var b=[];a=a.expressions;for(var d=a.length;d--;){var c=a[d];c&&!c.match(/^\s*$/)&&b.push(c)}return"["+b.join()+"]"}return function(c,b,d){var g,k,l;c.$on("$destroy",function(){k&&k();k=void 0});c.$watch(d.fgBindExpression,function(d){void 0!==d&&(g=a(d),b.addClass("ng-binding").data("$binding",g),d=e(g),l!==d?(l=d,k&&k(),k=void 0,k=c.$watchCollection(d,function(){b.text(g(c))})):b.text(g(c)))})}}]);f.directive("fgDropdownInput",
["$compile","$document","$timeout","$parse","fgUtils",function(a,e,c,b,d){function g(a,d,b){b=h.element('<div class="fg-dropdown-input input-group"><input type="text" class="form-control"/><span class="input-group-btn"><button class="btn btn-default" type="button" ng-click="dropdownToggle()"><span class="caret"></span></button></span></div>');var e=b.find("input");d=d.prop("attributes");h.forEach(d,function(a){"fg-dropdown-input"!==a.name&&"class"!==a.name&&e.attr(a.name,a.value)});b.find("button");
var g;a.dropdownToggle=function(){a.dropdownVisible=!a.dropdownVisible};a.$on("$destroy",function(){g&&c.cancel(g);g=void 0});return b}function k(a,c,e,g,k){var l=b(e.ngModel),m=l.assign,f=h.element('<div class="fg-dropdown" ng-class="{ \'open\': dropdownVisible }"><ul ng-if="items && items.length" class="dropdown-menu"><li ng-repeat="item in items" ng-class="{ active: item.value === getModelValue() }"><a href="" ng-click="setModelValue(item.value)">{{ item.text || item.value }}</a></li></ul></div>');
a.setModelValue=function(d){a.dropdownVisible=!1;var b=d||"";for(var c=g.$formatters.length;c--;){var e=g.$formatters[c];b=e(b);if(void 0===b)break}for(var c=g.$parsers.length,k=b;c--&&(e=g.$parsers[c],k=e(k),void 0!==k););void 0===k?(g.$setViewValue(b),g.$render()):m(a,d)};a.getModelValue=function(){return l(a)};var n=k[0];a.$watch("dropdownVisible",function(a){if(a){a=n.getBoundingClientRect();var b=d.getScrollOffset();f.css({left:b.x+a.left+"px",top:b.y+a.top+n.clientHeight+"px",width:n.clientWidth+
"px"})}});a.$watchCollection(e.fgDropdownInput,function(d){a.items=d});a.$on("$destroy",function(){f.remove()});return f}return{priority:1E3,restrict:"A",terminal:!0,scope:!0,compile:function(d,b){return function(d,b,c,l){l=g(d,b,c);b.append(l);a(l)(d);var m=l.find("input").controller("ngModel");b=k(d,b,c,m,l);c=a(b);e.find("body").append(b);c(d)}}}}]);f.directive("fgNullForm",function(){var a={$addControl:h.noop,$removeControl:h.noop,$setValidity:h.noop,$setDirty:h.noop,$setPristine:h.noop};return{restrict:"A",
require:["form"],link:function(e,c,b,d){e=d[0];(c=c.parent().inheritedData("$formController"))&&c.$removeControl(e);h.extend(e,a)}}});f.directive("fgFormRequiredFilter",function(){return{restrict:"A",require:["form"],link:function(a,e,c,b){var d=b[0],g=d.$setValidity;d.$setValidity=function(a,b,c){"required"===a&&(b=!0);g.call(d,a,b,c)}}}});f.directive("fgInputNumber",function(){return{require:"ngModel",link:function(a,e,c,b){b.$parsers.push(function(a){if(void 0==a)return"";var d=a.replace(/[^0-9]/g,
""),c=parseInt(d);c;d!=a&&(b.$setViewValue(d),b.$render());return c});b.$parsers.push(function(a){var d=b.$isEmpty(a);if(d||/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/.test(a))return b.$setValidity("number",!0),""===a?null:d?a:parseFloat(a);b.$setValidity("number",!1)});b.$formatters.push(function(a){return b.$isEmpty(a)?void 0:a});c.min&&(a=function(a){var d=parseFloat(c.min);if(!b.$isEmpty(a)&&a<d)b.$setValidity("min",!1);else return b.$setValidity("min",!0),a},b.$parsers.push(a),b.$formatters.push(a));
c.max&&(a=function(a){var d=parseFloat(c.max);if(!b.$isEmpty(a)&&a>d)b.$setValidity("max",!1);else return b.$setValidity("max",!0),a},b.$parsers.push(a),b.$formatters.push(a));b.$formatters.push(function(a){if(b.$isEmpty(a)||h.isNumber(a))return b.$setValidity("number",!0),a;b.$setValidity("number",!1)})}}});f.directive("fgPlaceholder",function(){return{link:function(a,e,c){a.$watch(c.fgPlaceholder,function(a){e.attr("placeholder",a)})}}});f.factory("fgUtils",["$templateCache","$window","fgConfig",
function(a,e,c){var b=+new Date%1E4;return{getScrollOffset:function(){var a={};if(void 0!==e.pageYOffset)a.x=e.pageXOffset,a.y=e.pageYOffset;else{var b=e.document.documentElement;a.x=b.scrollLeft;a.y=b.scrollTop}return a},defaultArea:"default",getRenderInfo:function(a){var b=c.fields.renderInfo[a.type];b||(b={},c.fields.renderInfo[a.type]=b);b.templateUrl||(b.templateUrl=this.getTemplateUrl(a));b.propertiesTemplateUrl||(b.propertiesTemplateUrl=this.getTemplateUrl(a,"properties"));return b},formatTemplateUrl:function(a,
b){return"angular-form-gen/field-templates/"+(b||this.defaultArea)+"/"+a+".ng.html"},getTemplateUrl:function(b,c){c=c||this.defaultArea;var d=this.formatTemplateUrl(b.type,c);if(!a.get(d))if("properties"!==c&&c!==this.defaultArea)d=this.getTemplateUrl(b,this.defaultArea);else return this.formatTemplateUrl("not-in-cache");return d},getUnique:function(){return++b},copyField:function(a){a=h.copy(a);a.name="field"+this.getUnique();return a},findElementsByClass:function(a,b,c,e){e=e||[];a.className===
b&&e.push(a);if(a.hasChildNodes())for(var d=0;d<a.children.length;d++){var g=a.children[d];g.className===b&&e.push(g);c&&this.findElementsByClass(g,b,c,e)}return e}}}]);h.module("dq",[]).factory("dqUtils",["$window","$rootScope",function(a,e){var c=null;return{getEvent:function(b){return b&&b.originalEvent?b.originalEvent:b||a.event},stopEvent:function(a){a.cancelBubble=!0;a.bubbles=!1;a.stopPropagation&&a.stopPropagation();a.preventDefault&&a.preventDefault();return!1},dragData:function(a){if(void 0===
a)return c;c=a},getParentArea:function(a){var b={};a.$emit("dqLocateArea",b);return b.name},isAreaMatch:function(a){return this.getParentArea(a)===(c?c.area:"")}}}]);h.module("dq").directive("dqDragArea",["dqUtils",function(a){return{restrict:"AEC",link:function(a,c,b){var d=b.dqDragArea||b.dqDragAreaName||"";a.$on("dqDragBegin",function(c,e){var g=b.dqDragProgressBegin;g&&e&&e.area===d&&a.$eval(g)});a.$on("dqDragEnd",function(c,e){var g=b.dqDragProgressEnd;g&&e&&e.area===d&&a.$eval(g)});a.$on("dqLocateArea",
function(a,b){b.name=d;a.stopPropagation()})}}}]);h.module("dq").directive("dqDragEnter",["dqDragTrack",function(a){return{link:a}}]).directive("dqDragLeave",["dqDragTrack",function(a){return{link:a}}]).directive("dqDragOver",["dqDragTrack",function(a){return{link:a}}]).directive("dqDrop",["dqDragTrack",function(a){return{link:a}}]).factory("dqDragTrack",["dqUtils","$document",function(a,e){return function(c,b,d){if(!0!==b.data("dqDragTrack")){var g=function(a){f=!1;var b=d.dqDragLeave;b&&(a?c.$apply(function(){c.$eval(b)}):
c.$eval(b))},k=function(b){var c=a.getEvent(b),d=c.target||b.target;d!==h&&(h.contains(d)||g(!0));q.off("dragover",k);r=!1;c.dataTransfer.dropEffect=p;return a.stopEvent(b)},l=!1,f=!1,h=b[0],p="none",r=!1,q=e.find("body");c.$on("$destroy",function(){q.off("dragover",k)});c.$on("dqDragBegin",function(){l=a.isAreaMatch(c)});c.$on("dqDragEnd",function(){l&&g(!1)});b.on("dragenter",function(a){if(l&&!1===f){f=!0;var b=d.dqDragEnter;b&&c.$apply(function(){c.$eval(b)})}});b.on("dragleave",function(){l&&
!0===f&&(r=!0,q.on("dragover",k))});b.on("dragover",function(b){if(l){var e=a.getEvent(b),g=d.dqDragOver,k;g&&c.$apply(function(){k=c.$eval(g)});p=!1===k?"none":"copy";if(!r)return e.dataTransfer.dropEffect=p,a.stopEvent(b)}});b.on("drop",function(b){a.getEvent(b);if(l){var e=d.dqDrop;e&&c.$apply(e)}return a.stopEvent(b)});b.data("dqDragTrack",!0)}}}]);h.module("dq").directive("dqDraggable",["dqUtils","$rootScope",function(a,e){function c(a,c,g,k,l){g.$apply(function(){var b=g.$eval(k),b={area:c,
data:b};l(b);e.$broadcast(a,b)})}return{restrict:"AEC",link:function(b,d,e){var g=e.dqDraggable||e.dqDragTargetArea||"",l=!1;b.$watch(e.dqDragDisabled,function(a){l=a;d.attr("draggable",l?"false":"true")});d.on("selectstart",function(b){if(!l&&this.dragDrop)return this.dragDrop(),b=a.getEvent(b),a.stopEvent(b)}).on("dragstart",function(d){d=a.getEvent(d);if(l)return a.stopEvent(d);d=d.dataTransfer;d.effectAllowed="all";d.setData("Text","The cake is a lie!");c("dqDragBegin",g,b,e.dqDragBegin,function(b){a.dragData(b)})}).on("dragend",
function(){c("dqDragEnd",g,b,e.dqDragEnd,function(){a.dragData(null)})})}}}]);f.controller("fgEditController",["$scope","fgUtils","$location",function(a,e,c){}]);f.directive("fgEdit",function(){return{priority:100,require:"fgSchema",restrict:"AE",scope:{schema:"=?fgSchema"},replace:!0,controller:"fgEditController as editCtrl",templateUrl:"angular-form-gen/edit/edit.ng.html",link:function(a,e,c,b){void 0===a.schema&&(a.schema={});b.model(a.schema);a.schemaCtrl=b}}});f.controller("fgFormController",
["$scope","$parse",function(a,e){this.model={};var c=this;this.init=function(b,d,g,k){c.editMode=k;b=e(b);var l=b.assign;a.$watch(b,function(b){void 0===b&&(b={},l&&l(a,b));c.model.data=b});a.$watch(function(){return d.model()},function(a){void 0===a?d.model({}):c.model.schema=a});c.model.state=g;return c.model}}]);f.directive("fgForm",["fgFormCompileFn",function(a){return{restrict:"AE",require:["^?form","fgForm","^fgSchema"],controller:"fgFormController",scope:!0,compile:a}}]).factory("fgFormLinkFn",
function(){return function(a,e,c,b){b[1].init(c.fgFormData,b[2],b[0],"true"===c.fgNoRender)}}).factory("fgFormCompileFn",["fgFormLinkFn",function(a){return function(e,c){e.addClass("fg-form");"true"!==c.fgNoRender&&e.append("<div fg-form-fields></div>");return a}}]);f.directive("fgValidationSummary",["fgValidationSummaryLinkFn",function(a){return{require:["^?fgField","^?form"],templateUrl:"angular-form-gen/validation/summary.ng.html",scope:{fieldName:"@?fgValidationSummary",validationMessages:"=?fgValidationMessages"},
link:a}}]).factory("fgValidationSummaryLinkFn",["fgConfig",function(a){return function(e,c,b,d){c=d[0];var g=d[1];c?(e.field=c.field(),e.form=c.form()):g&&(e.form={state:g},e.$watch("fieldName",function(a){e.field={name:a,state:g[a]}}));e.validationMessages&&h.forEach(e.validationMessages,function(a,b){a||delete e.validationMessages[b]});e.messages=h.extend({},a.validation.messages,e.validationMessages)}}]);f.directive("fgUniqueFieldName",function(){var a=0;return{priority:100,require:["ngModel",
"^fgSchema"],link:function(e,c,b,d){var g=d[0],k=d[1],l=e.field;if(!l)throw Error("No field property on scope");e.$watch(function(){return g.$modelValue},function(){++a});e.$watch(function(){return a},function(){var a=k.model(),b=!0;if(a)for(var c=a.fields,d=0;d<c.length;d++)if(a=c[d],a!==l&&l.name===a.name){b=!1;break}g.$setValidity("unique",b)})}}});f.filter("j$on",function(){return function(a,e){return e?JSON.stringify(a||{},null,"  "):h.toJson(a||{},!0)}}).directive("jsonify",["$window","$filter",
function(a,e){return{templateUrl:"angular-form-gen/common/jsonify/jsonify.ng.html",replace:!0,scope:{jsonify:"=",displayHidden:"@jsonifyDisplayHidden"},link:function(c,b,d,g){c.expression=d.jsonify;c.copy=function(){a.prompt("Copy to clipboard: Ctrl+C, Enter",e("j$on")(c.jsonify,c.displayHidden))}}}}]);f.controller("fgTabsController",["$scope",function(a){this.items=[];this.active=null;this.activeIndex=-1;this.add=function(e){this.items.push(e);this.items.sort(function(a,b){return a.order-b.order});
a.active||0==e.autoActive||this.activate(e)};this.activate=function(e){var c=-1;if(isNaN(e)){for(var b=this.items.length;b--;)if(this.items[b]===e){c=b;break}if(-1===c)throw Error("Cannot activate pane: not found in pane list.");}else{c=e;if(0>c||c>=this.items.length)throw Error("Cannot activate pane: index out of bounds.");e=this.items[c]}e.disabled||(this.active=a.active=e,this.activeIndex=a.activeIndex=c)}}]);f.directive("fgTabs",function(){return{require:["fgTabs"],restrict:"EA",transclude:!0,
controller:"fgTabsController",templateUrl:"angular-form-gen/common/tabs/tabs.ng.html",scope:{tabs:"=?fgTabs",active:"=?fgTabsActive",activeIndex:"=?fgTabsActiveIndex"},link:function(a,e,c,b){a.tabs=b[0];a.$watch("activeIndex",function(b){void 0!==b&&a.tabs.activeIndex!==b&&a.tabs.activate(b)})}}});f.directive("fgTabsPane",["fgTabsPaneLinkFn",function(a){return{require:["^fgTabs"],restrict:"EA",transclude:!0,templateUrl:"angular-form-gen/common/tabs/tabs-pane.ng.html",link:a,scope:!0}}]).factory("fgTabsPaneLinkFn",
function(){return function(a,e,c,b){a.tabs=b[0];a.pane={title:c.fgTabsPane||c.title,order:parseInt(c.fgTabsPaneOrder||c.order)||10,autoActive:!("false"===c.fgTabsPaneAutoActive||"false"===c.autoActive),renderAlways:"true"===c.fgTabsPaneRenderAlways||"true"===c.renderAlways};a.$watch(c.fgTabsPaneDisabled,function(b){a.pane.disabled=b});a.tabs.add(a.pane)}});f.controller("fgEditCanvasController",["$scope","dqUtils","$timeout","fgUtils",function(a,e,c,b){a.dragPlaceholder={visible:!1,index:0};a.$on("dqDragBegin",
function(){a.dragging=!0});a.$on("dqDragEnd",function(){a.dragging=!1});this.dragEnter=function(){a.dragPlaceholder.visible=!0;a.dragPlaceholder.index=a.schema.fields.length};this.dragLeave=function(){a.dragPlaceholder.visible=!1};this.dragBeginCanvasField=function(a,b){c(function(){b.$_isDragging=!0},1);return{source:"canvas",field:b,index:a}};this.dragEndCanvasField=function(a){c(function(){a.$_isDragging=!1},10)};this.drop=function(){var b=e.dragData();if(b&&b.data){var c=b.data.field,k=b.data.source,
b=b.data.index;"palette"==k?a.schemaCtrl.addField(c,a.dragPlaceholder.index):"canvas"==k&&a.schemaCtrl.moveField(b,a.dragPlaceholder.index);c.$_isDragging=!1}else throw Error("Drop without data");}}]);f.directive("fgEditCanvas",function(){return{require:["^fgEdit","^fgSchema","^form"],templateUrl:"angular-form-gen/edit/canvas/canvas.ng.html",controller:"fgEditCanvasController as canvasCtrl",link:function(a,e,c,b){a.editCtrl=b[0];a.schemaCtrl=b[1];a.formCtrl=b[2];var d=!0;a.$watchCollection("schema.fields",
function(){d||a.formCtrl.$setDirty(!0);d=!1})}}});f.controller("fgEditPaletteController",["$scope","fgConfig",function(a,e){a.templates=[];for(var c=e.fields.templates,b=c.length;b--;){var d=c[b];d.editor&&0==d.editor.visible||a.templates.unshift(h.copy(d))}a.templateFilter=function(b){return!a.selectedCategory||a.selectedCategory[b.type]}}]);f.directive("fgEditPalette",function(){return{require:["^fgSchema"],templateUrl:"angular-form-gen/edit/palette/palette.ng.html",controller:"fgEditPaletteController",
link:function(a,e,c,b){a.schemaCtrl=b[0]}}});f.directive("fgCheckboxlist",function(){return{require:["^fgField"],link:function(a,e,c,b){var d=b[0].field(),g=a.form.data,k=d.schema;a.$watchCollection(function(){return g[k.name]},function(a,b){d.state.$dirty||a===b||d.state.$setViewValue(a);if(k.validation){a:{var c=k.validation;var e=k.options;if(c&&c.required){for(c=e.length;c--;)if(a[e[c].value]){e=!0;break a}e=!1}else e=!0}d.state.$setValidity("required",e);e=k.validation.minoptions;var c=k.validation.maxoptions,
g=!0,f=!0;if(e||c){var l=0;for(h in a)a[h]&&(l+=1);var h=l;e&&(g=h>=k.validation.minoptions);c&&(f=h<=k.validation.maxoptions)}d.state.$setValidity("minoptions",g);d.state.$setValidity("maxoptions",f)}})}}});f.directive("fgSelectlist",["$timeout",function(a){return{priority:1E3,link:function(e,c){a(function(){for(var a=c.find("option"),d=a.length;0<=--d;){var e=h.element(a[d]);if("? undefined:undefined ?"==e.val()){e.remove();break}}},0)}}}]);f.controller("fgFieldController",["$scope","fgUtils",function(a,
e){var c=this,b,d;this.init=function(e,f,l){c.initForm(e);c.initField(f);c.initDefaultData(f,l);a.form=b;a.field=d};this.initForm=function(a){return b=a?a.model:{}};this.initField=function(b){d={$_id:"id"+e.getUnique(),schema:b};a.$watch("field.schema.name",function(a,b){c.registerState(a)});return d};this.initDefaultData=function(c,d){var e=c.name;b.data=b.data||{};d?(a.$watch("field.schema.value",function(a){b.data[c.name]=a}),a.$watch("field.schema.name",function(a,c){if(a!==c){var d=b.data[c];
delete b.data[c];b.data[a]=d}})):b.data&&void 0===b.data[e]&&void 0!==c.value&&(b.data[e]=h.copy(c.value));return b.data};this.setFieldState=function(a){d.state=a;c.registerState(d.schema.name)};this.registerState=function(a){b.state&&d.state&&(b.state.$removeControl(d.state),d.state.$name=a,b.state.$addControl(d.state));d.name=a};this.field=function(){return d};this.form=function(){return b}}]);f.directive("fgField",["fgFieldLinkFn",function(a){return{require:["^?fgForm","fgField"],replace:!0,templateUrl:"angular-form-gen/form/field/field.ng.html",
scope:{fieldSchema:"=fgField",tabIndex:"=?fgTabIndex",editMode:"=?fgEditMode",noValidationSummary:"=fgNoValidationSummary"},controller:"fgFieldController",link:a}}]).factory("fgFieldLinkFn",["fgUtils",function(a){return function(e,c,b,d){c=d[0];d=d[1];void 0===e.tabIndex&&(e.tabIndex="auto");e.renderInfo=a.getRenderInfo(e.fieldSchema);d.init(c,e.fieldSchema,e.editMode)}}]);f.directive("fgFieldInput",["fgFieldInputLinkFn",function(a){return{require:["^fgField","ngModel"],link:a}}]).factory("fgFieldInputLinkFn",
function(){return function(a,e,c,b){b[0].setFieldState(b[1])}});f.directive("fgFormFields",function(){return{require:["^?fgForm"],restrict:"AE",templateUrl:"angular-form-gen/form/form-fields/form-fields.ng.html",scope:{},link:function(a,e,c,b){var d=b[0];a.$watch(function(){return d.model},function(b){a.form=b})}}});f.controller("fgSchemaController",["$scope","fgUtils",function(a,e){var c;this.model=function(a){void 0!==a&&(c=a,h.isArray(a.fields)||(a.fields=[]));return c};this.addField=function(a,
d){var b=e.copyField(a);d=void 0===d?c.fields.length:d;c.fields.splice(d,0,b)};this.removeField=function(a){c.fields.splice(a,1)};this.swapFields=function(a,d){-1>=a||-1>=d||a>=c.fields.length||d>=c.fields.length||(c.fields[a]=c.fields.splice(d,1,c.fields[a])[0])};this.moveField=function(a,d){if(0<=a&&d<=c.fields.length&&a!==d){var b=c.fields.splice(a,1)[0];d>a&&--d;c.fields.splice(d,0,b)}}}]);f.directive("fgSchema",["fgSchemaLinkFn",function(a){return{require:["fgSchema"],controller:"fgSchemaController",
link:a}}]).factory("fgSchemaLinkFn",function(){return function(a,e,c,b){var d=b[0];a.$watch(c.fgSchema,function(a){d.model(a)})}});f.directive("fgEditCanvasField",["$timeout",function(a){return{templateUrl:"angular-form-gen/edit/canvas/field/field.ng.html",link:function(e){e.toggleProperties=function(a){a.$_displayProperties=a.$_displayProperties?a.$_invalid:!0};e.$watch("field.$_displayProperties",function(c){c?e.expanded=!0:a(function(){e.expanded=!1},550)})}}}]);f.controller("fgEditPaletteCategoriesController",
["$scope","fgConfig",function(a,e){a.categories=e.fields.categories;a.setCategory=function(b,c){a.categoryName=b};if(!a.category)for(var c in a.categories){a.setCategory(c,a.categories[c]);break}}]);f.directive("fgEditPaletteCategories",function(){return{templateUrl:"angular-form-gen/edit/palette/categories/categories.ng.html",require:"^fgEditPalette",scope:{category:"=?"},controller:"fgEditPaletteCategoriesController"}});f.directive("fgEditCanvasFieldProperties",["fgUtils",function(a){return{templateUrl:"angular-form-gen/edit/canvas/field/properties/properties.ng.html",
scope:{field:"=fgEditCanvasFieldProperties"},link:{pre:function(a){a.property={}},post:function(e){e.$watch("fieldPropertiesForm.$invalid",function(a){e.field.$_invalid=a});e.renderInfo=a.getRenderInfo(e.field);e.$watch("property.tabs.items.length",function(a){if(a){a=e.property.tabs.items;for(var b=a.length;b--;){var c=a[b];"Debug"!==c.title&&(c.renderAlways=!0)}}})}}}}]);f.controller("fgPropertyFieldOptionsController",["$scope",function(a){function e(b,c){b!==c&&(a.multiple?(a.field.value[b]=a.field.value[c],
delete a.field.value[c]):c===a.field.value&&(a.field.value=b))}var c=1;a.$watchCollection("field.options",function(b){b&&h.forEach(b,function(b){b.$_valueWatchFn||(b.$_valueWatchFn=a.$watch(function(){return b.value},e))})});this.toggleOption=function(b){"selectlist"!==a.field.type&&b===a.field.value&&(a.field.value=void 0)};this.addOption=function(){a.field.options||(a.field.options=[]);var b={value:"Option "+c++};a.field.options.push(b);var d=a.field.options.length;a.multiple||1!==d||(a.field.value=
b.value)};this.removeOption=function(b){(b=a.field.options.splice(b,1))&&b.length&&(b=b[0],a.multiple?void 0!==a.field.value[b.value]&&delete a.field.value[b.value]:(b.value===a.field.value&&a.field.options.length&&(a.field.value=a.field.options[0].value),b.$_valueWatchFn()))}}]);f.directive("fgPropertyFieldOptions",["fgPropertyFieldOptionsLinkFn",function(a){return{scope:!0,controller:"fgPropertyFieldOptionsController as optionsCtrl",templateUrl:"angular-form-gen/edit/canvas/field/properties/options/options.ng.html",
link:a}}]).factory("fgPropertyFieldOptionsLinkFn",function(){return function(a,e,c,b){a.multiple=!1;c.$observe("fgPropertyFieldOptions",function(b){"multiple"===b&&(a.multiple=!0)})}});f.directive("fgPropertyFieldCommon",["fgPropertyFieldCommonLinkFn",function(a){return{restrict:"AE",templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/common.ng.html",link:a}}]).factory("fgPropertyFieldCommonLinkFn",function(){return function(a,e,c,b){a.fields={fieldname:!1,displayname:!1,placeholder:!1,
tooltip:!1,focus:!1};a.$watch(c.fgPropertyFieldCommon,function(b){a.fields=h.extend(a.fields,b)})}});f.directive("fgPropertyFieldValue",["fgPropertyFieldValueLinkFn",function(a){return{require:["^form"],templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/field-value.ng.html",transclude:!0,link:a}}]).factory("fgPropertyFieldValueLinkFn",["$parse",function(a){return function(a,c,b,d){a.draw=!0;var e=d[0],f;a.$watch("field.$_redraw",function(b){if(b){if(b=e.fieldValue)f=b.$viewValue;
a.draw=!1;a.field.$_redraw=!1}else a.draw=!0});a.$watch(function(){return e.fieldValue},function(a){a&&f&&(a.$setViewValue(f),a.$render(),f=void 0)})}}]).directive("fgFieldRedraw",function(){return{require:["ngModel"],link:function(a,e,c,b){var d=a.$eval(c.ngModel);a.$watch(c.ngModel,function(b){b!=d&&(a.field.$_redraw=!0,d=b)})}}});f.directive("fgPropertyField",["fgPropertyFieldLinkFn",function(a){return{restrict:"AE",templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/property-field.ng.html",
transclude:!0,scope:!0,link:a}}]).factory("fgPropertyFieldLinkFn",function(){return function(a,e,c,b){c.$observe("fgPropertyField",function(b){a.fieldName=b});c.$observe("fgPropertyFieldLabel",function(b){b&&(a.fieldLabel=b)})}});f.directive("fgParsePattern",function(){return{require:["ngModel"],link:function(a,e,c,b){var d=b[0];d.$parsers.push(function(a){try{new RegExp(a)}catch(k){d.$setValidity("pattern",!1);return}d.$setValidity("pattern",!0);return a})}}});f.directive("fgPropertyFieldValidation",
["fgPropertyFieldValidationLinkFn",function(a){return{restrict:"A",templateUrl:"angular-form-gen/edit/canvas/field/properties/validation/validation.ng.html",link:a}}]).factory("fgPropertyFieldValidationLinkFn",["fgConfig",function(a){var e=[];h.forEach(a.validation.patterns,function(a,b){e.push({value:a,text:b})});return function(a,b,d,f){a.patternOptions=e;a.field.validation=a.field.validation||{};a.field.validation.messages=a.field.validation.messages||{};a.fields={required:!1,minlength:!1,maxlength:!1,
pattern:!1};a.$watch(d.fgPropertyFieldValidation,function(b){a.fields=h.extend(a.fields,b)})}}]);f.directive("fgEditValidationMessage",["fgEditValidationMessageLinkFn",function(a){return{templateUrl:"angular-form-gen/edit/canvas/field/properties/validation/validation-message.ng.html",link:a,scope:!0}}]).factory("fgEditValidationMessageLinkFn",function(){return function(a,e,c,b){c.$observe("fgEditValidationMessage",function(b){a.validationType=b});c.$observe("fgEditValidationTooltip",function(b){a.tooltip=
b||"Enter a error message here that will be shown if this validation fails. If this field is empty a default message will be used."})}})})(angular);